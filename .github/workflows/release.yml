name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          # Get previous tag
          PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")
          
          # Generate changelog
          if [ -z "$PREV_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" ${{ github.ref_name }})
          else
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" ${PREV_TAG}..${{ github.ref_name }})
          fi
          
          # Save to file
          echo "$CHANGELOG" > changelog.txt
          
          # Set output
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const changelog = fs.readFileSync('changelog.txt', 'utf8');
            
            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ github.ref_name }}',
              name: 'Release ${{ github.ref_name }}',
              body: `## What's Changed\n\n${changelog}\n\n**Full Changelog**: https://github.com/${context.repo.owner}/${context.repo.repo}/compare/v0.0.0...${{ github.ref_name }}`,
              draft: false,
              prerelease: false
            });

      - name: Notify team
        uses: actions/github-script@v7
        with:
          script: |
            core.notice('ðŸŽ‰ Release ${{ github.ref_name }} has been created!');

  publish-update:
    name: Publish EAS Update (Production)
    needs: create-release
    runs-on: ubuntu-latest
    env:
      EXPO_PUBLIC_SENTRY_DSN: ${{ secrets.EXPO_PUBLIC_SENTRY_DSN }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ vars.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
      SENTRY_URL: ${{ vars.SENTRY_URL || 'https://sentry.io/' }}
      SENTRY_RELEASE: ${{ vars.SENTRY_APP_NAME || 'calico' }}@${{ github.sha }}
      SENTRY_DIST: ${{ github.sha }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Publish to production
        run: |
          eas update --branch production \
            --message "Release ${{ github.ref_name }}" \
            --non-interactive
